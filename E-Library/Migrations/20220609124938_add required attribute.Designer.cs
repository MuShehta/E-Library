// <auto-generated />
using System;
using E_Library.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace E_Library.Migrations
{
    [DbContext(typeof(appContext))]
    [Migration("20220609124938_add required attribute")]
    partial class addrequiredattribute
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("E_Library.Model.Book", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("available_amount")
                        .HasColumnType("int");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<string>("publisher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("sold_amount")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("books");
                });

            modelBuilder.Entity("E_Library.Model.Buy", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("bookid")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("userid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("bookid");

                    b.HasIndex("userid");

                    b.ToTable("buy");
                });

            modelBuilder.Entity("E_Library.Model.Favorite", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("bookid")
                        .HasColumnType("int");

                    b.Property<int?>("userid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("bookid");

                    b.HasIndex("userid");

                    b.ToTable("favorites");
                });

            modelBuilder.Entity("E_Library.Model.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("first_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("last_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("member_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("E_Library.Model.Buy", b =>
                {
                    b.HasOne("E_Library.Model.Book", "book")
                        .WithMany("buy")
                        .HasForeignKey("bookid");

                    b.HasOne("E_Library.Model.User", "user")
                        .WithMany("buy")
                        .HasForeignKey("userid");

                    b.Navigation("book");

                    b.Navigation("user");
                });

            modelBuilder.Entity("E_Library.Model.Favorite", b =>
                {
                    b.HasOne("E_Library.Model.Book", "book")
                        .WithMany("favorites")
                        .HasForeignKey("bookid");

                    b.HasOne("E_Library.Model.User", "user")
                        .WithMany("favorites")
                        .HasForeignKey("userid");

                    b.Navigation("book");

                    b.Navigation("user");
                });

            modelBuilder.Entity("E_Library.Model.Book", b =>
                {
                    b.Navigation("buy");

                    b.Navigation("favorites");
                });

            modelBuilder.Entity("E_Library.Model.User", b =>
                {
                    b.Navigation("buy");

                    b.Navigation("favorites");
                });
#pragma warning restore 612, 618
        }
    }
}
